{"ast":null,"code":"var _jsxFileName = \"/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Johnny.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Johnny({\n  onLogin\n}) {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [password, setPassword] = useState('');\n  const [age, setAge] = useState('');\n  const [school, setSchool] = useState('');\n  const [bestSubject, setBestSubject] = useState('');\n  const [worstSubject, setWorstSubject] = useState('');\n  const [parentsEmail, setParentsEmail] = useState('');\n  const [parentsPhoneNumber, setParentsPhoneNumber] = useState('');\n  const [students, setStudents] = useState([]);\n  const [errors, setErrors] = useState([]);\n\n  // Yup validation schema\n  const validationSchema = yup.object().shape({\n    userName: yup.string().required('Username is required'),\n    password: yup.string().required('Password is required').min(6, 'Password must be 6 characters long').matches(/[0-9]/, 'Password requires a number').matches(/[A-Z]/, 'Password requires an uppercase letter').matches(/[^\\w]/, 'Password requires a symbol'),\n    fullName: yup.string().required('Full Name is required'),\n    age: yup.number().required('Age is required').positive('Age must be a positive number').integer('Age must be an integer'),\n    school: yup.string().required('School is required'),\n    bestSubject: yup.string().required('Best Subject is required'),\n    worstSubject: yup.string().required('Worst Subject is required'),\n    parentsEmail: yup.string().email('Invalid email').required('Parents\\' Email is required'),\n    parentsPhoneNumber: yup.string().required('Parents\\' Phone Number is required')\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Validate the form data using Yup\n      await validationSchema.validate({\n        userName,\n        password,\n        fullName,\n        age,\n        school,\n        bestSubject,\n        worstSubject,\n        parentsEmail,\n        parentsPhoneNumber\n      });\n\n      // If validation passes, create a new student object\n      const newStudent = {\n        userName,\n        password,\n        fullName,\n        age,\n        school,\n        bestSubject,\n        worstSubject,\n        parentsEmail,\n        parentsPhoneNumber\n      };\n      fetch('/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      }).then(r => {\n        if (r.ok) {\n          r.json().then(console.log('success'));\n          setStudents([...students, newStudent]);\n          onLogin(newStudent);\n          navigate('/');\n        } else {\n          console.log('failure');\n        }\n      });\n\n      // Reset the form fields after submission\n      setUserName('');\n      setFullName('');\n      setPassword('');\n      setAge('');\n      setSchool('');\n      setBestSubject('');\n      setWorstSubject('');\n      setParentsEmail('');\n      setParentsPhoneNumber('');\n    } catch (error) {\n      // Handle validation errors\n      console.error(error.message);\n      const validationErrors = {};\n      error.inner.forEach(error => {\n        validationErrors[error.path] = error.message;\n      });\n      setErrors(error.message);\n    }\n  };\n  const [showVideo, setShowVideo] = useState(false);\n  const toggleVideoVisibility = () => {\n    setShowVideo(!showVideo);\n  };\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"johnny\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '0%'\n      },\n      children: \"Sign Up / Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        marginBottom: '5%'\n      },\n      className: \"custom-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"status\",\n        type: \"checkbox\",\n        name: \"status\",\n        checked: showVideo,\n        onChange: toggleVideoVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {},\n        htmlFor: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-switch ${showVideo ? 'checked' : ''}`,\n          \"data-unchecked\": \"Sign-Up\",\n          \"data-checked\": \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), showVideo ? /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: 'right',\n        color: 'white',\n        marginRight: '35%'\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UserName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"schead\",\n        children: \"Student's Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 102\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"School:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: school,\n        onChange: e => setSchool(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 106\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Best Subject:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            backgroundColor: 'white',\n            padding: '3px',\n            paddingLeft: '3%',\n            appearance: 'listbox'\n          },\n          value: bestSubject,\n          onChange: e => setBestSubject(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Math\",\n            children: \"Math\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Science\",\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Reading\",\n            children: \"Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Spelling\",\n            children: \"Spelling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Social Studies\",\n            children: \"Social Studies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Worst Subject:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            backgroundColor: 'white',\n            padding: '3px',\n            paddingLeft: '3%',\n            appearance: 'listbox'\n          },\n          value: worstSubject,\n          onChange: e => setWorstSubject(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Math\",\n            children: \"Math\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Science\",\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Reading\",\n            children: \"Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Spelling\",\n            children: \"Spelling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Social Studies\",\n            children: \"Social Studies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"schead\",\n        children: \"Parents' Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: parentsEmail,\n        onChange: e => setParentsEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 119\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"schead\",\n        children: \"Parents' Phone #:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        value: parentsPhoneNumber,\n        onChange: e => setParentsPhoneNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginRight: '17%',\n          minWidth: '10%'\n        },\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), errors && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errors\",\n        style: {\n          border: errors.length > 1 ? '2px solid darkred' : 'none'\n        },\n        children: [errors, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: 'right',\n        color: 'white',\n        marginRight: '35%',\n        paddingBottom: '15%'\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UserName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginRight: '17%',\n          minWidth: '10%'\n        },\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 123\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Students:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.firstName, \" \", student.lastName, \", Age: \", student.age, \", School: \", student.school]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(Johnny, \"pzeewKDtzeAdjnrQbwarHIPKN5w=\");\n_c = Johnny;\nexport default Johnny;\nvar _c;\n$RefreshReg$(_c, \"Johnny\");","map":{"version":3,"names":["React","useState","yup","axios","jsxDEV","_jsxDEV","Johnny","onLogin","_s","userName","setUserName","fullName","setFullName","password","setPassword","age","setAge","school","setSchool","bestSubject","setBestSubject","worstSubject","setWorstSubject","parentsEmail","setParentsEmail","parentsPhoneNumber","setParentsPhoneNumber","students","setStudents","errors","setErrors","validationSchema","object","shape","string","required","min","matches","number","positive","integer","email","handleSubmit","e","preventDefault","validate","newStudent","fetch","method","headers","body","JSON","stringify","user","then","r","ok","json","console","log","navigate","error","message","validationErrors","inner","forEach","path","showVideo","setShowVideo","toggleVideoVisibility","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","marginBottom","id","type","name","checked","onChange","htmlFor","textAlign","color","marginRight","onSubmit","value","target","backgroundColor","padding","paddingLeft","appearance","minWidth","border","length","paddingBottom","map","student","index","firstName","lastName","_c","$RefreshReg$"],"sources":["/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Johnny.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport * as yup from 'yup';\nimport axios from 'axios'\n\nfunction Johnny({ onLogin }) {\n    const [userName, setUserName] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [password, setPassword] = useState('');\n    const [age, setAge] = useState('');\n    const [school, setSchool] = useState('');\n    const [bestSubject, setBestSubject] = useState('');\n    const [worstSubject, setWorstSubject] = useState('');\n    const [parentsEmail, setParentsEmail] = useState('');\n    const [parentsPhoneNumber, setParentsPhoneNumber] = useState('');\n    const [students, setStudents] = useState([]);\n    const [errors, setErrors] = useState([]);\n\n    // Yup validation schema\n    const validationSchema = yup.object().shape({\n        userName: yup.string().required('Username is required'),\n        password: yup.string().required('Password is required')\n        .min(6, 'Password must be 6 characters long')\n        .matches(/[0-9]/, 'Password requires a number')\n        .matches(/[A-Z]/, 'Password requires an uppercase letter')\n        .matches(/[^\\w]/, 'Password requires a symbol'),\n        fullName: yup.string().required('Full Name is required'),\n        age: yup\n            .number()\n            .required('Age is required')\n            .positive('Age must be a positive number')\n            .integer('Age must be an integer'),\n        school: yup.string().required('School is required'),\n        bestSubject: yup.string().required('Best Subject is required'),\n        worstSubject: yup.string().required('Worst Subject is required'),\n        parentsEmail: yup.string().email('Invalid email').required('Parents\\' Email is required'),\n        parentsPhoneNumber: yup.string().required('Parents\\' Phone Number is required'),\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // Validate the form data using Yup\n            await validationSchema.validate({\n                userName,\n                password,\n                fullName,\n                age,\n                school,\n                bestSubject,\n                worstSubject,\n                parentsEmail,\n                parentsPhoneNumber,\n            });\n\n            // If validation passes, create a new student object\n            const newStudent = {\n                userName,\n                password,\n                fullName,\n                age,\n                school,\n                bestSubject,\n                worstSubject,\n                parentsEmail,\n                parentsPhoneNumber\n            };\n            fetch('/signup', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(user),\n              }).then((r) => {\n                if (r.ok) {\n                    r.json().then(console.log('success'));\n                    setStudents([...students, newStudent]);\n                    onLogin(newStudent)\n                    navigate('/');\n          } else {\n            console.log('failure');\n          }\n        });\n\n            // Reset the form fields after submission\n            setUserName('')\n            setFullName('');\n            setPassword('');\n            setAge('');\n            setSchool('');\n            setBestSubject('');\n            setWorstSubject('');\n            setParentsEmail('');\n            setParentsPhoneNumber('');\n        } catch (error) {\n            // Handle validation errors\n            console.error(error.message);\n            const validationErrors = {};\n            error.inner.forEach((error) => {\n            validationErrors[error.path] = error.message;\n            });\n            setErrors(error.message);\n            \n        }\n    };\n\n    const [showVideo, setShowVideo] = useState(false);\n\n    const toggleVideoVisibility = () => {\n      setShowVideo(!showVideo);\n    };\n    console.log(errors)\n\n    return (\n        <div className=\"johnny\">\n            <h1 style={{marginTop:'0%'}}>Sign Up / Login</h1>\n            <div style={{ display: 'inline-block',marginBottom:'5%'}}className=\"custom-checkbox\">\n          <input\n            id=\"status\"\n            type=\"checkbox\"\n            name=\"status\"\n            checked={showVideo}\n            onChange={toggleVideoVisibility}\n          />\n          <label style={{}} htmlFor=\"status\">\n            <div\n            \n              className={`status-switch ${showVideo ? 'checked' : ''}`}\n              data-unchecked=\"Sign-Up\"\n              data-checked=\"Login\"\n            ></div>\n          </label>\n        </div>\n\n        { showVideo ? \n            <form style={{textAlign:'right',color:'white', marginRight:'35%'}} onSubmit={handleSubmit}>\n                <label>UserName:</label>\n                <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)} required /><br></br>\n                <label>Password:</label>\n                <input type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} required /><br></br>\n\n                <label>Full Name:</label>\n                <input type=\"text\" value={fullName} onChange={(e) => setFullName(e.target.value)} required /><br></br>\n                <label className=\"schead\">Student's Age:</label>\n                <input type=\"number\" value={age} onChange={(e) => setAge(e.target.value)} required /><br></br>\n                <label>School:</label>\n                <input type=\"text\" value={school} onChange={(e) => setSchool(e.target.value)} required /><br></br>\n                {/* <label>Best Subject:</label>\n                <input type=\"text\" value={bestSubject} onChange={(e) => setBestSubject(e.target.value)} required /><br></br> */}\n\n                <label>\n                    Best Subject:\n                    <select style={{ backgroundColor: 'white',padding: '3px',paddingLeft: '3%',appearance: 'listbox'}} value={bestSubject} onChange={(e) => setBestSubject(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"Math\">Math</option>\n                        <option value=\"Science\">Science</option>\n                        <option value=\"Reading\">Reading</option>\n                        <option value=\"Spelling\">Spelling</option>\n                        <option value=\"Social Studies\">Social Studies</option>\n                    </select>\n                    </label><br></br>\n\n\n                {/* <label>Worst Subject:</label>\n                <input type=\"text\" value={worstSubject} onChange={(e) => setWorstSubject(e.target.value)} required /><br></br> */}\n\n                <label>\n                    Worst Subject:\n                    <select style={{ backgroundColor: 'white',padding: '3px',paddingLeft:'3%',appearance: 'listbox'}} value={worstSubject} onChange={(e) => setWorstSubject(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"Math\">Math</option>\n                        <option value=\"Science\">Science</option>\n                        <option value=\"Reading\">Reading</option>\n                        <option value=\"Spelling\">Spelling</option>\n                        <option value=\"Social Studies\">Social Studies</option>\n                    </select>\n                    </label><br></br>\n\n                <label className=\"schead\">Parents' Email:</label>\n                <input type=\"email\" value={parentsEmail} onChange={(e) => setParentsEmail(e.target.value)} required /><br></br>\n                <label className=\"schead\">Parents' Phone #:</label>\n                <input type=\"tel\" value={parentsPhoneNumber} onChange={(e) => setParentsPhoneNumber(e.target.value)} required /><br></br>\n                <button style={{marginRight:'17%',minWidth:'10%'}} type=\"submit\">Submit</button>\n                \n                {errors && (<p className=\"errors\" style={{ border: errors.length > 1 ? '2px solid darkred' : 'none' }}>{errors} </p>)}\n\n                \n\n\n\n            </form> : <form style={{textAlign:'right',color:'white', marginRight:'35%',paddingBottom: '15%'}} onSubmit={handleSubmit}>\n                <label>UserName:</label>\n                <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)} required /><br></br>\n                <label>Password:</label>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required /><br></br><button style={{marginRight:'17%',minWidth:'10%'}} type=\"submit\">Login</button></form> \n                }\n\n\n            <h2>All Students:</h2>\n            <ul>\n                {students.map((student, index) => (\n                    <li key={index}>\n                        {student.firstName} {student.lastName}, Age: {student.age}, School: {student.school}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Johnny;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}