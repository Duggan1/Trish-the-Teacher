{"ast":null,"code":"var _jsxFileName = \"/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Tommy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tommy({\n  user\n}) {\n  _s();\n  // Define a function to generate the week objects\n  const generateWeek = () => {\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n    const hours = [\"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\"];\n    const week = {};\n    for (const day of days) {\n      week[day] = {};\n      for (const hour of hours) {\n        week[day][hour] = false;\n      }\n    }\n    return week;\n  };\n\n  // Create an array to hold the week objects for all 52 weeks\n  const allWeeks = Array.from({\n    length: 52\n  }, () => generateWeek());\n  const weekDates = [\"August 14\", \"August 21\", \"August 28\", \"September 4\", \"September 11\", \"September 18\", \"September 25\", \"October 2\", \"October 9\", \"October 16\", \"October 23\", \"October 30\", \"November 6\", \"November 13\", \"November 20\", \"November 27\", \"December 4\", \"December 11\", \"December 18\", \"December 25\", \"January 1\", \"January 8\", \"January 15\", \"January 22\", \"January 29\", \"February 5\", \"February 12\", \"February 19\", \"February 26\", \"March 5\", \"March 12\", \"March 19\", \"March 26\", \"April 2\", \"April 9\", \"April 16\", \"April 23\", \"April 30\", \"May 7\", \"May 14\", \"May 21\", \"May 28\", \"June 4\", \"June 11\", \"June 18\", \"June 25\", \"July 2\", \"July 9\", \"July 16\", \"July 23\", \"July 30\", \"August 6\", \"August 13\"];\n  const weekDays = [\n  // August\n  [\"August 14\", \"August 15\", \"August 16\", \"August 17\", \"August 18\"],\n  // August 21 to August 25\n  [\"August 21\", \"August 22\", \"August 23\", \"August 24\", \"August 25\"],\n  // August 28 to September 1\n  [\"August 28\", \"August 29\", \"August 30\", \"August 31\", \"September 1\"],\n  // September 4 to September 8\n  [\"September 4\", \"September 5\", \"September 6\", \"September 7\", \"September 8\"],\n  // September 11 to September 15\n  [\"September 11\", \"September 12\", \"September 13\", \"September 14\", \"September 15\"],\n  // September 18 to September 22\n  [\"September 18\", \"September 19\", \"September 20\", \"September 21\", \"September 22\"],\n  // September 25 to September 29\n  [\"September 25\", \"September 26\", \"September 27\", \"September 28\", \"September 29\"],\n  // October 2 to October 6\n  [\"October 2\", \"October 3\", \"October 4\", \"October 5\", \"October 6\"],\n  // October 9 to October 13\n  [\"October 9\", \"October 10\", \"October 11\", \"October 12\", \"October 13\"],\n  // October 16 to October 20\n  [\"October 16\", \"October 17\", \"October 18\", \"October 19\", \"October 20\"],\n  // October 23 to October 27\n  [\"October 23\", \"October 24\", \"October 25\", \"October 26\", \"October 27\"],\n  // October 30 to November 3\n  [\"October 30\", \"October 31\", \"November 1\", \"November 2\", \"November 3\"],\n  // November 6 to November 10\n  [\"November 6\", \"November 7\", \"November 8\", \"November 9\", \"November 10\"],\n  // November 13 to November 17\n  [\"November 13\", \"November 14\", \"November 15\", \"November 16\", \"November 17\"],\n  // November 20 to November 24\n  [\"November 20\", \"November 21\", \"November 22\", \"November 23\", \"November 24\"],\n  // November 27 to December 1\n  [\"November 27\", \"November 28\", \"November 29\", \"November 30\", \"December 1\"],\n  // December 4 to December 8\n  [\"December 4\", \"December 5\", \"December 6\", \"December 7\", \"December 8\"],\n  // December 11 to December 15\n  [\"December 11\", \"December 12\", \"December 13\", \"December 14\", \"December 15\"],\n  // December 18 to December 22\n  [\"December 18\", \"December 19\", \"December 20\", \"December 21\", \"December 22\"],\n  // December 25 to December 29\n  [\"December 25\", \"December 26\", \"December 27\", \"December 28\", \"December 29\"],\n  // January 1 to January 5\n  [\"January 1\", \"January 2\", \"January 3\", \"January 4\", \"January 5\"],\n  // January 8 to January 12\n  [\"January 8\", \"January 9\", \"January 10\", \"January 11\", \"January 12\"],\n  // January 15 to January 19\n  [\"January 15\", \"January 16\", \"January 17\", \"January 18\", \"January 19\"],\n  // January 22 to January 26\n  [\"January 22\", \"January 23\", \"January 24\", \"January 25\", \"January 26\"],\n  // January 29 to February 2\n  [\"January 29\", \"January 30\", \"January 31\", \"February 1\", \"February 2\"],\n  // February 5 to February 9\n  [\"February 5\", \"February 6\", \"February 7\", \"February 8\", \"February 9\"],\n  // February 12 to February 16\n  [\"February 12\", \"February 13\", \"February 14\", \"February 15\", \"February 16\"],\n  // February 19 to February 23\n  [\"February 19\", \"February 20\", \"February 21\", \"February 22\", \"February 23\"],\n  // February 26 to March 2\n  [\"February 26\", \"February 27\", \"February 28\", \"March 1\", \"March 2\"],\n  // March 5 to March 9\n  [\"March 5\", \"March 6\", \"March 7\", \"March 8\", \"March 9\"],\n  // March 12 to March 16\n  [\"March 12\", \"March 13\", \"March 14\", \"March 15\", \"March 16\"],\n  // March 19 to March 23\n  [\"March 19\", \"March 20\", \"March 21\", \"March 22\", \"March 23\"],\n  // March 26 to March 30\n  [\"March 26\", \"March 27\", \"March 28\", \"March 29\", \"March 30\"],\n  // April 2 to April 6\n  [\"April 2\", \"April 3\", \"April 4\", \"April 5\", \"April 6\"],\n  // April 9 to April 13\n  [\"April 9\", \"April 10\", \"April 11\", \"April 12\", \"April 13\"],\n  // April 16 to April 20\n  [\"April 16\", \"April 17\", \"April 18\", \"April 19\", \"April 20\"],\n  // April 23 to April 27\n  [\"April 23\", \"April 24\", \"April 25\", \"April 26\", \"April 27\"],\n  // April 30 to May 4\n  [\"April 30\", \"May 1\", \"May 2\", \"May 3\", \"May 4\"],\n  // May 7 to May 11\n  [\"May 7\", \"May 8\", \"May 9\", \"May 10\", \"May 11\"],\n  // May 14 to May 18\n  [\"May 14\", \"May 15\", \"May 16\", \"May 17\", \"May 18\"],\n  // May 21 to May 25\n  [\"May 21\", \"May 22\", \"May 23\", \"May 24\", \"May 25\"],\n  // May 28 to June 1\n  [\"May 28\", \"May 29\", \"May 30\", \"May 31\", \"June 1\"],\n  // June 4 to June 8\n  [\"June 4\", \"June 5\", \"June 6\", \"June 7\", \"June 8\"],\n  // June 11 to June 15\n  [\"June 11\", \"June 12\", \"June 13\", \"June 14\", \"June 15\"],\n  // June 18 to June 22\n  [\"June 18\", \"June 19\", \"June 20\", \"June 21\", \"June 22\"],\n  // June 25 to June 29\n  [\"June 25\", \"June 26\", \"June 27\", \"June 28\", \"June 29\"],\n  // July 2 to July 6\n  [\"July 2\", \"July 3\", \"July 4\", \"July 5\", \"July 6\"],\n  // July 9 to July 13\n  [\"July 9\", \"July 10\", \"July 11\", \"July 12\", \"July 13\"],\n  // July 16 to July 20\n  [\"July 16\", \"July 17\", \"July 18\", \"July 19\", \"July 20\"],\n  // July 23 to July 27\n  [\"July 23\", \"July 24\", \"July 25\", \"July 26\", \"July 27\"],\n  // July 30 to August 3\n  [\"July 30\", \"July 31\", \"August 1\", \"August 2\", \"August 3\"]];\n  const [weeks, setWeeks] = useState(allWeeks);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(0); // Set to 0 initially\n\n  const handleReservation = (day, time) => {\n    const updatedWeeks = [...weeks];\n    updatedWeeks[currentWeekIndex][day][time] = !updatedWeeks[currentWeekIndex][day][time];\n    setWeeks(updatedWeeks);\n  };\n  const switchToWeek = index => {\n    setCurrentWeekIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tommy\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '0%'\n      },\n      children: weekDates[currentWeekIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '0%',\n        color: 'gold'\n      },\n      children: \"Select week below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"arrows\",\n      value: currentWeekIndex,\n      onChange: e => switchToWeek(parseInt(e.target.value)),\n      children: weekDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index,\n        children: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        backgroundColor: '#282c34',\n        color: 'white',\n        minWidth: '100%',\n        maxWidth: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"schead\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), Object.keys(weeks[0]).map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"schead\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(weeks[0].Monday).map(time => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), Object.keys(weeks[currentWeekIndex]).map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `reservation-button ${weeks[currentWeekIndex][day][time] ? 'reserved' : ''}`,\n                onClick: () => handleReservation(day, time),\n                disabled: user && weeks[currentWeekIndex][day][time],\n                id: \"basement\",\n                style: {\n                  backgroundColor: weeks[currentWeekIndex][day][time] ? 'red' : 'green',\n                  color: 'white'\n                },\n                children: weeks[currentWeekIndex][day][time] ? 'Reserved' : 'Available'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this)\n            }, `${day}-${time}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: Object.keys(weeks[0]).length,\n              style: {\n                textAlign: 'center'\n              },\n              children: [time, \" Weekday\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Tommy, \"ZFVnWpJ1DGR1Lh/kmyBo9vQ8TyQ=\");\n_c = Tommy;\nexport default Tommy;\nvar _c;\n$RefreshReg$(_c, \"Tommy\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tommy","user","_s","generateWeek","days","hours","week","day","hour","allWeeks","Array","from","length","weekDates","weekDays","weeks","setWeeks","currentWeekIndex","setCurrentWeekIndex","handleReservation","time","updatedWeeks","switchToWeek","index","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","color","value","onChange","e","parseInt","target","map","date","backgroundColor","minWidth","maxWidth","Object","keys","Monday","Fragment","onClick","disabled","id","colSpan","textAlign","_c","$RefreshReg$"],"sources":["/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Tommy.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction Tommy({ user }) {\n  // Define a function to generate the week objects\n  const generateWeek = () => {\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n    const hours = [\"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\"];\n\n    const week = {};\n\n    for (const day of days) {\n      week[day] = {};\n      for (const hour of hours) {\n        week[day][hour] = false;\n      }\n    }\n\n    return week;\n  };\n\n  // Create an array to hold the week objects for all 52 weeks\n  const allWeeks = Array.from({ length: 52 }, () => generateWeek());\n\n  const weekDates = [\n    \"August 14\", \"August 21\", \"August 28\", \"September 4\", \"September 11\",\n    \"September 18\", \"September 25\", \"October 2\", \"October 9\", \"October 16\",\n    \"October 23\", \"October 30\", \"November 6\", \"November 13\", \"November 20\",\n    \"November 27\", \"December 4\", \"December 11\", \"December 18\", \"December 25\",\n    \"January 1\", \"January 8\", \"January 15\", \"January 22\", \"January 29\",\n    \"February 5\", \"February 12\", \"February 19\", \"February 26\", \"March 5\",\n    \"March 12\", \"March 19\", \"March 26\", \"April 2\", \"April 9\",\n    \"April 16\", \"April 23\", \"April 30\", \"May 7\", \"May 14\",\n    \"May 21\", \"May 28\", \"June 4\", \"June 11\", \"June 18\",\n    \"June 25\", \"July 2\", \"July 9\", \"July 16\", \"July 23\",\n    \"July 30\", \"August 6\", \"August 13\",\n  ];\n  const weekDays = [\n    // August\n    [\"August 14\", \"August 15\", \"August 16\", \"August 17\", \"August 18\"],\n    // August 21 to August 25\n    [\"August 21\", \"August 22\", \"August 23\", \"August 24\", \"August 25\"],\n    // August 28 to September 1\n    [\"August 28\", \"August 29\", \"August 30\", \"August 31\", \"September 1\"],\n    // September 4 to September 8\n    [\"September 4\", \"September 5\", \"September 6\", \"September 7\", \"September 8\"],\n    // September 11 to September 15\n    [\"September 11\", \"September 12\", \"September 13\", \"September 14\", \"September 15\"],\n    // September 18 to September 22\n    [\"September 18\", \"September 19\", \"September 20\", \"September 21\", \"September 22\"],\n    // September 25 to September 29\n    [\"September 25\", \"September 26\", \"September 27\", \"September 28\", \"September 29\"],\n    // October 2 to October 6\n    [\"October 2\", \"October 3\", \"October 4\", \"October 5\", \"October 6\"],\n    // October 9 to October 13\n    [\"October 9\", \"October 10\", \"October 11\", \"October 12\", \"October 13\"],\n    // October 16 to October 20\n    [\"October 16\", \"October 17\", \"October 18\", \"October 19\", \"October 20\"],\n    // October 23 to October 27\n    [\"October 23\", \"October 24\", \"October 25\", \"October 26\", \"October 27\"],\n    // October 30 to November 3\n    [\"October 30\", \"October 31\", \"November 1\", \"November 2\", \"November 3\"],\n    // November 6 to November 10\n    [\"November 6\", \"November 7\", \"November 8\", \"November 9\", \"November 10\"],\n    // November 13 to November 17\n    [\"November 13\", \"November 14\", \"November 15\", \"November 16\", \"November 17\"],\n    // November 20 to November 24\n    [\"November 20\", \"November 21\", \"November 22\", \"November 23\", \"November 24\"],\n    // November 27 to December 1\n    [\"November 27\", \"November 28\", \"November 29\", \"November 30\", \"December 1\"],\n    // December 4 to December 8\n    [\"December 4\", \"December 5\", \"December 6\", \"December 7\", \"December 8\"],\n    // December 11 to December 15\n    [\"December 11\", \"December 12\", \"December 13\", \"December 14\", \"December 15\"],\n    // December 18 to December 22\n    [\"December 18\", \"December 19\", \"December 20\", \"December 21\", \"December 22\"],\n    // December 25 to December 29\n    [\"December 25\", \"December 26\", \"December 27\", \"December 28\", \"December 29\"],\n    // January 1 to January 5\n    [\"January 1\", \"January 2\", \"January 3\", \"January 4\", \"January 5\"],\n    // January 8 to January 12\n    [\"January 8\", \"January 9\", \"January 10\", \"January 11\", \"January 12\"],\n    // January 15 to January 19\n    [\"January 15\", \"January 16\", \"January 17\", \"January 18\", \"January 19\"],\n    // January 22 to January 26\n    [\"January 22\", \"January 23\", \"January 24\", \"January 25\", \"January 26\"],\n    // January 29 to February 2\n    [\"January 29\", \"January 30\", \"January 31\", \"February 1\", \"February 2\"],\n    // February 5 to February 9\n    [\"February 5\", \"February 6\", \"February 7\", \"February 8\", \"February 9\"],\n    // February 12 to February 16\n    [\"February 12\", \"February 13\", \"February 14\", \"February 15\", \"February 16\"],\n    // February 19 to February 23\n    [\"February 19\", \"February 20\", \"February 21\", \"February 22\", \"February 23\"],\n    // February 26 to March 2\n    [\"February 26\", \"February 27\", \"February 28\", \"March 1\", \"March 2\"],\n    // March 5 to March 9\n    [\"March 5\", \"March 6\", \"March 7\", \"March 8\", \"March 9\"],\n    // March 12 to March 16\n    [\"March 12\", \"March 13\", \"March 14\", \"March 15\", \"March 16\"],\n    // March 19 to March 23\n    [\"March 19\", \"March 20\", \"March 21\", \"March 22\", \"March 23\"],\n    // March 26 to March 30\n    [\"March 26\", \"March 27\", \"March 28\", \"March 29\", \"March 30\"],\n    // April 2 to April 6\n    [\"April 2\", \"April 3\", \"April 4\", \"April 5\", \"April 6\"],\n    // April 9 to April 13\n    [\"April 9\", \"April 10\", \"April 11\", \"April 12\", \"April 13\"],\n    // April 16 to April 20\n    [\"April 16\", \"April 17\", \"April 18\", \"April 19\", \"April 20\"],\n    // April 23 to April 27\n    [\"April 23\", \"April 24\", \"April 25\", \"April 26\", \"April 27\"],\n    // April 30 to May 4\n    [\"April 30\", \"May 1\", \"May 2\", \"May 3\", \"May 4\"],\n    // May 7 to May 11\n    [\"May 7\", \"May 8\", \"May 9\", \"May 10\", \"May 11\"],\n    // May 14 to May 18\n    [\"May 14\", \"May 15\", \"May 16\", \"May 17\", \"May 18\"],\n    // May 21 to May 25\n    [\"May 21\", \"May 22\", \"May 23\", \"May 24\", \"May 25\"],\n    // May 28 to June 1\n    [\"May 28\", \"May 29\", \"May 30\", \"May 31\", \"June 1\"],\n    // June 4 to June 8\n    [\"June 4\", \"June 5\", \"June 6\", \"June 7\", \"June 8\"],\n    // June 11 to June 15\n    [\"June 11\", \"June 12\", \"June 13\", \"June 14\", \"June 15\"],\n    // June 18 to June 22\n    [\"June 18\", \"June 19\", \"June 20\", \"June 21\", \"June 22\"],\n    // June 25 to June 29\n    [\"June 25\", \"June 26\", \"June 27\", \"June 28\", \"June 29\"],\n    // July 2 to July 6\n    [\"July 2\", \"July 3\", \"July 4\", \"July 5\", \"July 6\"],\n    // July 9 to July 13\n    [\"July 9\", \"July 10\", \"July 11\", \"July 12\", \"July 13\"],\n    // July 16 to July 20\n    [\"July 16\", \"July 17\", \"July 18\", \"July 19\", \"July 20\"],\n    // July 23 to July 27\n    [\"July 23\", \"July 24\", \"July 25\", \"July 26\", \"July 27\"],\n    // July 30 to August 3\n    [\"July 30\", \"July 31\", \"August 1\", \"August 2\", \"August 3\"],\n  ];\n  \n  \n  \n \n  const [weeks, setWeeks] = useState(allWeeks);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(0); // Set to 0 initially\n\n  const handleReservation = (day, time) => {\n    const updatedWeeks = [...weeks];\n    updatedWeeks[currentWeekIndex][day][time] = !updatedWeeks[currentWeekIndex][day][time];\n    setWeeks(updatedWeeks);\n  };\n\n  const switchToWeek = (index) => {\n    setCurrentWeekIndex(index);\n  };\n\n  return (\n    <div className=\"tommy\">\n      <h1 style={{ marginTop: '0%' }}>{weekDates[currentWeekIndex]}</h1>\n      <h2 style={{ marginBottom: '0%', color: 'gold' }}>Select week below</h2>\n      <select\n        className=\"arrows\"\n        value={currentWeekIndex}\n        onChange={(e) => switchToWeek(parseInt(e.target.value))}\n      >\n        {weekDates.map((date, index) => (\n          <option key={index} value={index}>\n            {date}\n          </option>\n        ))}\n      </select>\n      <table style={{ backgroundColor: '#282c34', color: 'white', minWidth: '100%', maxWidth: '100%' }}>\n        <thead>\n          <tr>\n            <th className=\"schead\">Time</th>\n            {Object.keys(weeks[0]).map(day => (\n              <th className=\"schead\" key={day}>\n                {day}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(weeks[0].Monday).map(time => (\n            <React.Fragment key={time}>\n              <tr>\n                <td>{time}</td>\n                {Object.keys(weeks[currentWeekIndex]).map(day => (\n                  <td key={`${day}-${time}`}>\n                    <button\n                      className={`reservation-button ${weeks[currentWeekIndex][day][time] ? 'reserved' : ''}`}\n                      onClick={() => handleReservation(day, time)}\n                      disabled={user && weeks[currentWeekIndex][day][time]}\n                      id=\"basement\"\n                      style={{\n                        backgroundColor: weeks[currentWeekIndex][day][time] ? 'red' : 'green',\n                        color: 'white',\n                      }}\n                    >\n                      {weeks[currentWeekIndex][day][time] ? 'Reserved' : 'Available'}\n                    </button>\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td colSpan={Object.keys(weeks[0]).length} style={{ textAlign: 'center' }}>\n                  {time} Weekday\n                </td>\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n  \n}\n\nexport default Tommy;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}