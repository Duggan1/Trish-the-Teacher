{"ast":null,"code":"var _jsxFileName = \"/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Tommy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tommy({\n  user\n}) {\n  _s();\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const timeSlots = ['3 PM', '4 PM', '5 PM', '6 PM', '7 PM'];\n  const [schedule, setSchedule] = useState(daysOfWeek.reduce((acc, day) => {\n    const daySlots = timeSlots.map(time => ({\n      day,\n      time,\n      reserved: false\n    }));\n    return [...acc, ...daySlots];\n  }, []));\n  const handleReservation = (day, time) => {\n    const updatedSchedule = schedule.map(slot => slot.day === day && slot.time === time ? {\n      ...slot,\n      reserved: !slot.reserved\n    } : slot);\n    setSchedule(updatedSchedule);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tommy\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '0%'\n      },\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Content coming soon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 38\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timeSlots.map(time => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), daysOfWeek.map(day => {\n              const slot = schedule.find(slot => slot.day === day && slot.time === time);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'inline-block',\n                    marginBottom: '5%'\n                  },\n                  className: \"custom-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"status\",\n                    value: slot.reserved,\n                    type: \"checkbox\",\n                    name: `${day}-${time}` // Use a unique name for each checkbox\n                    ,\n                    checked: slot.reserved,\n                    onChange: () => handleReservation(day, time) // Pass the day and time to the function\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `${day}-${time}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `status-switch ${slot.reserved ? 'checked' : ''}`,\n                      \"data-unchecked\": \"Available\",\n                      \"data-checked\": \"Reserved\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this)\n              }, `${day}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this);\n            })]\n          }, time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Tommy, \"Vi3H9kY5HIPopM9EbkggKOMNVnE=\");\n_c = Tommy;\nexport default Tommy;\nvar _c;\n$RefreshReg$(_c, \"Tommy\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tommy","user","_s","daysOfWeek","timeSlots","schedule","setSchedule","reduce","acc","day","daySlots","map","time","reserved","handleReservation","updatedSchedule","slot","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","find","display","marginBottom","value","type","name","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/peggyduggan/Development/TtT/Trish-the-Teacher/src/Tommy.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction Tommy({ user }) {\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const timeSlots = ['3 PM', '4 PM', '5 PM', '6 PM', '7 PM'];\n\n  const [schedule, setSchedule] = useState(\n    daysOfWeek.reduce((acc, day) => {\n      const daySlots = timeSlots.map(time => ({ day, time, reserved: false }));\n      return [...acc, ...daySlots];\n    }, [])\n  );\n\n  const handleReservation = (day, time) => {\n    const updatedSchedule = schedule.map(slot =>\n      slot.day === day && slot.time === time ? { ...slot, reserved: !slot.reserved } : slot\n    );\n    setSchedule(updatedSchedule);\n  };\n\n  return (\n    <div className=\"tommy\">\n      <h1 style={{ marginTop: '0%' }}>3</h1>\n      <h2>Content coming soon!</h2>\n      <h2>Schedule:</h2>\n      <div className=\"schedule\">\n        <table>\n          <thead>\n            <tr>\n              <th>Time</th>\n              {daysOfWeek.map(day => <th key={day}>{day}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {timeSlots.map(time => (\n              <tr key={time}>\n                <td>{time}</td>\n                {daysOfWeek.map(day => {\n                  const slot = schedule.find(slot => slot.day === day && slot.time === time);\n                  return (\n                    <td key={`${day}-${time}`}>\n                      <div style={{ display: 'inline-block', marginBottom: '5%' }} className=\"custom-checkbox\">\n                        <input\n                          className=\"status\"\n                          value={slot.reserved}\n                          type=\"checkbox\"\n                          name={`${day}-${time}`} // Use a unique name for each checkbox\n                          checked={slot.reserved}\n                          onChange={() => handleReservation(day, time)} // Pass the day and time to the function\n                        />\n                        <label htmlFor={`${day}-${time}`}>\n                          <div\n                            className={`status-switch ${slot.reserved ? 'checked' : ''}`}\n                            data-unchecked=\"Available\"\n                            data-checked=\"Reserved\"\n                          ></div>\n                        </label>\n                      </div>\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Tommy;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,KAAKA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;EAC3E,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EAE1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CACtCM,UAAU,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC9B,MAAMC,QAAQ,GAAGN,SAAS,CAACO,GAAG,CAACC,IAAI,KAAK;MAAEH,GAAG;MAAEG,IAAI;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC,CAAC;IACxE,OAAO,CAAC,GAAGL,GAAG,EAAE,GAAGE,QAAQ,CAAC;EAC9B,CAAC,EAAE,EAAE,CACP,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAACL,GAAG,EAAEG,IAAI,KAAK;IACvC,MAAMG,eAAe,GAAGV,QAAQ,CAACM,GAAG,CAACK,IAAI,IACvCA,IAAI,CAACP,GAAG,KAAKA,GAAG,IAAIO,IAAI,CAACJ,IAAI,KAAKA,IAAI,GAAG;MAAE,GAAGI,IAAI;MAAEH,QAAQ,EAAE,CAACG,IAAI,CAACH;IAAS,CAAC,GAAGG,IACnF,CAAC;IACDV,WAAW,CAACS,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBnB,OAAA;MAAIoB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAE;MAAAF,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCzB,OAAA;MAAAmB,QAAA,EAAI;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BzB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBzB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBnB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YAAAmB,QAAA,gBACEnB,OAAA;cAAAmB,QAAA,EAAI;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACZrB,UAAU,CAACQ,GAAG,CAACF,GAAG,iBAAIV,OAAA;cAAAmB,QAAA,EAAeT;YAAG,GAATA,GAAG;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRzB,OAAA;UAAAmB,QAAA,EACGd,SAAS,CAACO,GAAG,CAACC,IAAI,iBACjBb,OAAA;YAAAmB,QAAA,gBACEnB,OAAA;cAAAmB,QAAA,EAAKN;YAAI;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACdrB,UAAU,CAACQ,GAAG,CAACF,GAAG,IAAI;cACrB,MAAMO,IAAI,GAAGX,QAAQ,CAACoB,IAAI,CAACT,IAAI,IAAIA,IAAI,CAACP,GAAG,KAAKA,GAAG,IAAIO,IAAI,CAACJ,IAAI,KAAKA,IAAI,CAAC;cAC1E,oBACEb,OAAA;gBAAAmB,QAAA,eACEnB,OAAA;kBAAKoB,KAAK,EAAE;oBAAEO,OAAO,EAAE,cAAc;oBAAEC,YAAY,EAAE;kBAAK,CAAE;kBAACV,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,gBACtFnB,OAAA;oBACEkB,SAAS,EAAC,QAAQ;oBAClBW,KAAK,EAAEZ,IAAI,CAACH,QAAS;oBACrBgB,IAAI,EAAC,UAAU;oBACfC,IAAI,EAAG,GAAErB,GAAI,IAAGG,IAAK,EAAE,CAAC;oBAAA;oBACxBmB,OAAO,EAAEf,IAAI,CAACH,QAAS;oBACvBmB,QAAQ,EAAEA,CAAA,KAAMlB,iBAAiB,CAACL,GAAG,EAAEG,IAAI,CAAE,CAAC;kBAAA;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/C,CAAC,eACFzB,OAAA;oBAAOkC,OAAO,EAAG,GAAExB,GAAI,IAAGG,IAAK,EAAE;oBAAAM,QAAA,eAC/BnB,OAAA;sBACEkB,SAAS,EAAG,iBAAgBD,IAAI,CAACH,QAAQ,GAAG,SAAS,GAAG,EAAG,EAAE;sBAC7D,kBAAe,WAAW;sBAC1B,gBAAa;oBAAU;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL;cAAC,GAjBE,GAAEf,GAAI,IAAGG,IAAK,EAAC;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkBrB,CAAC;YAET,CAAC,CAAC;UAAA,GAzBKZ,IAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BT,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAlEQF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAoEd,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}